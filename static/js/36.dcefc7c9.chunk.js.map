{"version":3,"file":"static/js/36.dcefc7c9.chunk.js","mappings":"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","sources":["Page/CV/Eduonline.js","../node_modules/@mui/icons-material/esm/School.js","../node_modules/@mui/icons-material/esm/Web.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@mui/material/Typography\";\nimport HeaderCV from \"./HeaderCV\";\nimport { Grid, Icon, Chip, Paper, Divider } from \"@mui/material\";\nimport { School, Web } from \"@mui/icons-material\";\nimport LinkButtonPublic from \"../../Componets/LinkButtonPublic\";\n\nexport default function Eduonline(props) {\n    const { lang, env, list } = props;\n    //console.log(\"props\", props);\n    let { edu } = useParams();\n    let listEduonline = list.find((i) => i.link === edu);\n    return (\n        /*\t\t<ReadMD\n        env={env}\n        file={`https://raw.githubusercontent.com/afimpel/afimpel.github.io/cv/CurriculumVitae/Education/${edu}`}\n    />*/\n        <>\n            <HeaderCV {...props} min={true} />\n            <Paper\n                sx={{\n                    p: 2,\n                    mx: 1,\n                    mt: 1,\n                    mb: 2,\n                    flexGrow: 1,\n                    borderRadius: 3,\n                    boxShadow: 5,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    overflow: \"hidden\",\n                }}\n            >\n                <Grid container spacing={1} columns={16}>\n                    <Grid\n                        item\n                        xs={2}\n                        sx={{ p: \"auto\", textAlign: \"center\", verticalAlign: \"center\" }}\n                    >\n                        <Icon sx={{ fontSize: \"76px !important;\" }}>\n                            {listEduonline.icons}\n                        </Icon>\n                    </Grid>\n                    <Grid item xs sx={{ p: \"auto\", textAlign: \"center\" }}>\n                        <Typography\n                            variant=\"h2\"\n                            fontWeight={700}\n                            component=\"h2\"\n                            sx={{ my: 0, mx: 0, textAlign: \"center\" }}\n                        >\n                            {listEduonline.name}\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Divider item xs sx={{ width: \"100%\", my: 1 }} />\n                <Grid\n                    container\n                    item\n                    direction=\"row\"\n                    justifyContent=\"space-around\"\n                    alignItems=\"center\"\n                >\n                    <Chip\n                        item\n                        sx={{ px: 3 }}\n                        icon={<School />}\n                        label={lang.cv.EducationOnline}\n                    />\n                    <LinkButtonPublic\n                        to={listEduonline.url}\n                        target=\"_blank\"\n                        iconSRC={<Web />}\n                        type=\"chip\"\n                        icons={false}\n                        sx={{ px: 3 }}\n                    >\n                        {listEduonline.name}\n                    </LinkButtonPublic>\n\n                </Grid>\n                <Divider item xs sx={{ width: \"100%\", my: 1 }} />\n                {listEduonline.courses && (\n                    <>\n                        {listEduonline.courses.map((item, id) => (\n                            <LinkButtonPublic\n                                key={id * 2}\n                                to={item.url}\n                                icons={true}\n                                type=\"list\"\n                                iconSRC={\n                                        <Icon>{item.icons}</Icon>\n                                }\n                                primary={item.name}\n                                secondary={\n                                    new Date(item.entry).toLocaleDateString(lang.type, {\n                                        year: \"numeric\",\n                                        month: \"short\",\n                                    }) +\n                                    \" / \" +\n                                    (!item.actuality\n                                        ? new Date(item.egress).toLocaleDateString(lang.type, {\n                                            year: \"numeric\",\n                                            month: \"short\",\n                                        })\n                                        : lang.cv.EducationActaulity)\n                                }\n                                dense\n                                primaryTypographyProps={{\n                                    fontSize: 14,\n                                    fontWeight: \"medium\",\n                                }}\n                            />\n                        ))}\n                    </>\n                )}\n            </Paper>\n            {env ? (<>\n                <Typography variant=\"code\" gutterBottom component=\"pre\" wrap=\"nowrap\">\n                    {edu} - {env}\n                </Typography>\n                <hr />\n                <Typography variant=\"code\" gutterBottom component=\"pre\" wrap=\"nowrap\">\n                    {JSON.stringify(\n                        list.find((i) => i.link === edu),\n                        \" \",\n                        \" \"\n                    )}\n                </Typography>\n            </>\n            ) : (\n                \"\"\n            )}\n        </>\n    );\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13.18v4L12 21l7-3.82v-4L12 17l-7-3.82zM12 3 1 9l11 6 9-4.91V17h2V9L12 3z\"\n}), 'School');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 14H4v-4h11v4zm0-5H4V9h11v4zm5 5h-4V9h4v9z\"\n}), 'Web');"],"names":["Eduonline","props","lang","env","list","edu","useParams","listEduonline","find","i","link","min","sx","p","mx","mt","mb","flexGrow","borderRadius","boxShadow","display","flexDirection","overflow","container","spacing","columns","item","xs","textAlign","verticalAlign","fontSize","icons","variant","fontWeight","component","my","name","width","direction","justifyContent","alignItems","px","icon","label","cv","EducationOnline","to","url","target","iconSRC","type","courses","map","id","primary","secondary","Date","entry","toLocaleDateString","year","month","actuality","EducationActaulity","egress","dense","primaryTypographyProps","gutterBottom","wrap","JSON","stringify","createSvgIcon","_jsx","d"],"sourceRoot":""}